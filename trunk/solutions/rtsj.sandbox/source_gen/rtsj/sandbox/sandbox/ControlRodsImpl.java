package rtsj.sandbox.sandbox;

/*Generated by MPS */

import javax.realtime.RealtimeThread;

public class ControlRodsImpl implements IControlRods {
  private Integer rodPosition = (Integer) MainDefinition.allocateVariable("immortalMemory", Integer.class);
  private IReactor reactor = null;

  public ControlRodsImpl() {
    rodPosition = 0;
  }

  public void run() {
    do {
      double deltaFromIdeal = Constants.idealCoreTemperature - reactor.getTemperature();

      int rodsRaisingChange = (int) deltaFromIdeal / 20;
      rodPosition += rodsRaisingChange;

      if (rodPosition < 0) {
        rodPosition = 0;
      }
      // its in procent, so maximal is 100 
      if (rodPosition > 100) {
        rodPosition = 100;
      }
    } while (RealtimeThread.waitForNextPeriod());
  }

  public Integer getRodRaising() {
    return rodPosition;
  }

  public void setReactor(IReactor _reactor) {
    reactor = _reactor;
  }
}
