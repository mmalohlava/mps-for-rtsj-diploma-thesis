package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.IntegerConstant;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReleaseParametresSporadic extends ReleaseParametres {
  public static final String concept = "rtsj.structure.ReleaseParametresSporadic";
  public static final String MIN_INTERVAL = "minInterval";

  public ReleaseParametresSporadic(SNode node) {
    super(node);
  }

  public IntegerConstant getMinInterval() {
    return (IntegerConstant) this.getChild(IntegerConstant.class, ReleaseParametresSporadic.MIN_INTERVAL);
  }

  public void setMinInterval(IntegerConstant node) {
    super.setChild(ReleaseParametresSporadic.MIN_INTERVAL, node);
  }

  public static ReleaseParametresSporadic newInstance(SModel sm, boolean init) {
    return (ReleaseParametresSporadic) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.ReleaseParametresSporadic", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReleaseParametresSporadic newInstance(SModel sm) {
    return ReleaseParametresSporadic.newInstance(sm, false);
  }
}
