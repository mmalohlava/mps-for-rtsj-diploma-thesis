package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InterThreadChannelPush extends Statement {
  public static final String concept = "rtsj.structure.InterThreadChannelPush";
  public static final String CHANNEL = "channel";

  public InterThreadChannelPush(SNode node) {
    super(node);
  }

  public InterThreadChannel getChannel() {
    return (InterThreadChannel) this.getReferent(InterThreadChannel.class, InterThreadChannelPush.CHANNEL);
  }

  public void setChannel(InterThreadChannel node) {
    super.setReferent(InterThreadChannelPush.CHANNEL, node);
  }

  public static InterThreadChannelPush newInstance(SModel sm, boolean init) {
    return (InterThreadChannelPush) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.InterThreadChannelPush", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InterThreadChannelPush newInstance(SModel sm) {
    return InterThreadChannelPush.newInstance(sm, false);
  }
}
