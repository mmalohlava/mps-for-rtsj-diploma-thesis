package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RealtimeThreadReference extends BaseConcept {
  public static final String concept = "rtsj.structure.RealtimeThreadReference";
  public static final String THREAD = "thread";

  public RealtimeThreadReference(SNode node) {
    super(node);
  }

  public RealtimeThread getThread() {
    return (RealtimeThread) this.getReferent(RealtimeThread.class, RealtimeThreadReference.THREAD);
  }

  public void setThread(RealtimeThread node) {
    super.setReferent(RealtimeThreadReference.THREAD, node);
  }

  public static RealtimeThreadReference newInstance(SModel sm, boolean init) {
    return (RealtimeThreadReference) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.RealtimeThreadReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RealtimeThreadReference newInstance(SModel sm) {
    return RealtimeThreadReference.newInstance(sm, false);
  }
}
