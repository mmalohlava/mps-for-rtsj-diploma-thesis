package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.IntegerConstant;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ModeChangePriority extends BaseConcept {
  public static final String concept = "rtsj.structure.ModeChangePriority";
  public static final String THREAD = "thread";
  public static final String PRIORITY = "priority";

  public ModeChangePriority(SNode node) {
    super(node);
  }

  public RealtimeThread getThread() {
    return (RealtimeThread) this.getReferent(RealtimeThread.class, ModeChangePriority.THREAD);
  }

  public void setThread(RealtimeThread node) {
    super.setReferent(ModeChangePriority.THREAD, node);
  }

  public IntegerConstant getPriority() {
    return (IntegerConstant) this.getChild(IntegerConstant.class, ModeChangePriority.PRIORITY);
  }

  public void setPriority(IntegerConstant node) {
    super.setChild(ModeChangePriority.PRIORITY, node);
  }

  public static ModeChangePriority newInstance(SModel sm, boolean init) {
    return (ModeChangePriority) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.ModeChangePriority", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ModeChangePriority newInstance(SModel sm) {
    return ModeChangePriority.newInstance(sm, false);
  }
}
