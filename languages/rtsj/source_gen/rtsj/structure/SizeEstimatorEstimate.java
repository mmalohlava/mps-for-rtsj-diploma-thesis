package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SizeEstimatorEstimate extends Expression {
  public static final String concept = "rtsj.structure.SizeEstimatorEstimate";
  public static final String SIZE_ESTIMATOR = "sizeEstimator";

  public SizeEstimatorEstimate(SNode node) {
    super(node);
  }

  public SizeEstimator getSizeEstimator() {
    return (SizeEstimator) this.getReferent(SizeEstimator.class, SizeEstimatorEstimate.SIZE_ESTIMATOR);
  }

  public void setSizeEstimator(SizeEstimator node) {
    super.setReferent(SizeEstimatorEstimate.SIZE_ESTIMATOR, node);
  }

  public static SizeEstimatorEstimate newInstance(SModel sm, boolean init) {
    return (SizeEstimatorEstimate) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.SizeEstimatorEstimate", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SizeEstimatorEstimate newInstance(SModel sm) {
    return SizeEstimatorEstimate.newInstance(sm, false);
  }
}
