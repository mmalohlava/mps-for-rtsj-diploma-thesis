package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AllocateMemoryStatement extends Statement {
  public static final String concept = "rtsj.structure.AllocateMemoryStatement";
  public static final String MEMORY = "memory";

  public AllocateMemoryStatement(SNode node) {
    super(node);
  }

  public ScopedMemory getMemory() {
    return (ScopedMemory) this.getChild(ScopedMemory.class, AllocateMemoryStatement.MEMORY);
  }

  public void setMemory(ScopedMemory node) {
    super.setChild(AllocateMemoryStatement.MEMORY, node);
  }

  public static AllocateMemoryStatement newInstance(SModel sm, boolean init) {
    return (AllocateMemoryStatement) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.AllocateMemoryStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AllocateMemoryStatement newInstance(SModel sm) {
    return AllocateMemoryStatement.newInstance(sm, false);
  }
}
