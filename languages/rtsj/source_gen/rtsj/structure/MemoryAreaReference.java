package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MemoryAreaReference extends BaseConcept {
  public static final String concept = "rtsj.structure.MemoryAreaReference";
  public static final String MEMORY = "memory";

  public MemoryAreaReference(SNode node) {
    super(node);
  }

  public MemoryArea getMemory() {
    return (MemoryArea) this.getReferent(MemoryArea.class, MemoryAreaReference.MEMORY);
  }

  public void setMemory(MemoryArea node) {
    super.setReferent(MemoryAreaReference.MEMORY, node);
  }

  public static MemoryAreaReference newInstance(SModel sm, boolean init) {
    return (MemoryAreaReference) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.MemoryAreaReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MemoryAreaReference newInstance(SModel sm) {
    return MemoryAreaReference.newInstance(sm, false);
  }
}
