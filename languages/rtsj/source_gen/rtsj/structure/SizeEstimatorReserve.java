package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.baseLanguage.structure.IntegerConstant;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SizeEstimatorReserve extends Statement {
  public static final String concept = "rtsj.structure.SizeEstimatorReserve";
  public static final String SIZE_ESTIMATOR = "sizeEstimator";
  public static final String OBJECT_TYPE = "objectType";
  public static final String NUMBER = "number";

  public SizeEstimatorReserve(SNode node) {
    super(node);
  }

  public SizeEstimator getSizeEstimator() {
    return (SizeEstimator) this.getReferent(SizeEstimator.class, SizeEstimatorReserve.SIZE_ESTIMATOR);
  }

  public void setSizeEstimator(SizeEstimator node) {
    super.setReferent(SizeEstimatorReserve.SIZE_ESTIMATOR, node);
  }

  public Type getObjectType() {
    return (Type) this.getChild(Type.class, SizeEstimatorReserve.OBJECT_TYPE);
  }

  public void setObjectType(Type node) {
    super.setChild(SizeEstimatorReserve.OBJECT_TYPE, node);
  }

  public IntegerConstant getNumber() {
    return (IntegerConstant) this.getChild(IntegerConstant.class, SizeEstimatorReserve.NUMBER);
  }

  public void setNumber(IntegerConstant node) {
    super.setChild(SizeEstimatorReserve.NUMBER, node);
  }

  public static SizeEstimatorReserve newInstance(SModel sm, boolean init) {
    return (SizeEstimatorReserve) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.SizeEstimatorReserve", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SizeEstimatorReserve newInstance(SModel sm) {
    return SizeEstimatorReserve.newInstance(sm, false);
  }
}
