package rtsj.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunThreadStatement extends Statement {
  public static final String concept = "rtsj.structure.RunThreadStatement";
  public static final String THREAD = "thread";

  public RunThreadStatement(SNode node) {
    super(node);
  }

  public RealtimeThreadReference getThread() {
    return (RealtimeThreadReference) this.getChild(RealtimeThreadReference.class, RunThreadStatement.THREAD);
  }

  public void setThread(RealtimeThreadReference node) {
    super.setChild(RunThreadStatement.THREAD, node);
  }

  public static RunThreadStatement newInstance(SModel sm, boolean init) {
    return (RunThreadStatement) SModelUtil_new.instantiateConceptDeclaration("rtsj.structure.RunThreadStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunThreadStatement newInstance(SModel sm) {
    return RunThreadStatement.newInstance(sm, false);
  }
}
