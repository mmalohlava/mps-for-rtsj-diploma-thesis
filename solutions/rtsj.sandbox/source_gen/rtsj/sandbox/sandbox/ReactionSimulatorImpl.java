package rtsj.sandbox.sandbox;

/*Generated by MPS */


public class ReactionSimulatorImpl implements IReactor {
  private Double temperature = (Double) MainDefinition.allocateVariable("immortalMemory", Double.class);
  private Integer speedOfReaction = (Integer) MainDefinition.allocateVariable("immortalMemory", Integer.class);
  private IControlRods controlRods = null;
  private IWaterLoop waterLoop = null;

  public ReactionSimulatorImpl() {

    temperature = 15.0;
    speedOfReaction = 0;
  }

  public void run() {
    int rodRaising = controlRods.getRodRaising();

    // some fictitious formula for calculating delta of reaction in core 
    int delta = (rodRaising - 30) / 10;
    speedOfReaction += delta;
    if (speedOfReaction < 0) {
      speedOfReaction = 0;
    }

    // heat generation 
    temperature += speedOfReaction * 0.05;

    // cooling by water flow 
    temperature -= waterLoop.getFlow() * 0.02;

    if (temperature < 0) {
      temperature = 0.0;
    }
  }

  public Double getTemperature() {
    return temperature;
  }

  public void setControlRods(IControlRods _controlRods) {
    controlRods = _controlRods;
  }

  public void setWaterLoop(IWaterLoop _waterLoop) {
    waterLoop = _waterLoop;
  }
}
