package rtsj.sandbox.sandbox;

/*Generated by MPS */

import javax.realtime.RawMemoryAccess;

public class PrimaryWaterLoopImpl implements IWaterLoop {
  private static final double maximalFlow = 120;

  private Double waterFlow = (Double) MainDefinition.allocateVariable("immortalMemory", Double.class);
  private IReactor reactor = null;

  public PrimaryWaterLoopImpl() {
    waterFlow = 10.0;
    MainDefinition.allocateRawMemoryAccess("bla", new RawMemoryAccess(null, 10, 20));
  }

  public void run() {
    waterFlow = reactor.getTemperature() / 3;
    if (waterFlow > maximalFlow) {
      waterFlow = maximalFlow;
    }
    Long i = MainDefinition.getRawMemoryAccess("bla").getLong(0);
    MainDefinition.getRawMemoryAccess("bla").setByte(0, (byte) 10);
    System.out.print(i);
  }

  public void setReactor(IReactor _reactor) {
    reactor = _reactor;
  }

  public Double getFlow() {
    return waterFlow;
  }
}
